[{"C:\\Users\\zahar\\webshop\\client\\src\\index.js":"1","C:\\Users\\zahar\\webshop\\client\\src\\App.js":"2","C:\\Users\\zahar\\webshop\\client\\src\\store\\UserStore.js":"3","C:\\Users\\zahar\\webshop\\client\\src\\store\\DeviceStore.js":"4","C:\\Users\\zahar\\webshop\\client\\src\\http\\userAPI.js":"5","C:\\Users\\zahar\\webshop\\client\\src\\components\\AppRouter.js":"6","C:\\Users\\zahar\\webshop\\client\\src\\components\\NavBar.js":"7","C:\\Users\\zahar\\webshop\\client\\src\\http\\index.js":"8","C:\\Users\\zahar\\webshop\\client\\src\\routes.js":"9","C:\\Users\\zahar\\webshop\\client\\src\\utils\\consts.js":"10","C:\\Users\\zahar\\webshop\\client\\src\\pages\\DevicePage.js":"11","C:\\Users\\zahar\\webshop\\client\\src\\pages\\Auth.js":"12","C:\\Users\\zahar\\webshop\\client\\src\\pages\\Shop.js":"13","C:\\Users\\zahar\\webshop\\client\\src\\pages\\Admin.js":"14","C:\\Users\\zahar\\webshop\\client\\src\\pages\\Basket.js":"15","C:\\Users\\zahar\\webshop\\client\\src\\http\\deviceAPI.js":"16","C:\\Users\\zahar\\webshop\\client\\src\\components\\DeviceList.js":"17","C:\\Users\\zahar\\webshop\\client\\src\\components\\BrandBar.js":"18","C:\\Users\\zahar\\webshop\\client\\src\\components\\Pages.js":"19","C:\\Users\\zahar\\webshop\\client\\src\\components\\TypeBar.js":"20","C:\\Users\\zahar\\webshop\\client\\src\\components\\modals\\CreateBrand.js":"21","C:\\Users\\zahar\\webshop\\client\\src\\components\\modals\\CreateDevice.js":"22","C:\\Users\\zahar\\webshop\\client\\src\\components\\modals\\CreateType.js":"23","C:\\Users\\zahar\\webshop\\client\\src\\components\\DeviceItem.js":"24","C:\\Users\\zahar\\webshop\\client\\src\\components\\BasketList.js":"25","C:\\Users\\zahar\\webshop\\client\\src\\components\\BasketItem.js":"26"},{"size":457,"mtime":1702232500962,"results":"27","hashOfConfig":"28"},{"size":893,"mtime":1702232500947,"results":"29","hashOfConfig":"28"},{"size":424,"mtime":1702232500978,"results":"30","hashOfConfig":"28"},{"size":1432,"mtime":1702334545935,"results":"31","hashOfConfig":"28"},{"size":715,"mtime":1702232500962,"results":"32","hashOfConfig":"28"},{"size":820,"mtime":1702232500947,"results":"33","hashOfConfig":"28"},{"size":2394,"mtime":1704739896225,"results":"34","hashOfConfig":"28"},{"size":428,"mtime":1702232500962,"results":"35","hashOfConfig":"28"},{"size":810,"mtime":1704828313519,"results":"36","hashOfConfig":"28"},{"size":234,"mtime":1702232500978,"results":"37","hashOfConfig":"28"},{"size":2681,"mtime":1704834863023,"results":"38","hashOfConfig":"28"},{"size":3224,"mtime":1702232500962,"results":"39","hashOfConfig":"28"},{"size":1587,"mtime":1702335259534,"results":"40","hashOfConfig":"28"},{"size":1591,"mtime":1702232500962,"results":"41","hashOfConfig":"28"},{"size":633,"mtime":1704839220288,"results":"42","hashOfConfig":"28"},{"size":1035,"mtime":1702334961572,"results":"43","hashOfConfig":"28"},{"size":510,"mtime":1702232500962,"results":"44","hashOfConfig":"28"},{"size":785,"mtime":1702232500947,"results":"45","hashOfConfig":"28"},{"size":829,"mtime":1702335256128,"results":"46","hashOfConfig":"28"},{"size":777,"mtime":1702232500962,"results":"47","hashOfConfig":"28"},{"size":1415,"mtime":1702232500962,"results":"48","hashOfConfig":"28"},{"size":6256,"mtime":1702232500962,"results":"49","hashOfConfig":"28"},{"size":1399,"mtime":1702232500962,"results":"50","hashOfConfig":"28"},{"size":1113,"mtime":1704840152573,"results":"51","hashOfConfig":"28"},{"size":549,"mtime":1704862457687,"results":"52","hashOfConfig":"28"},{"size":902,"mtime":1704841834193,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"3e2fh3",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},"C:\\Users\\zahar\\webshop\\client\\src\\index.js",[],["120","121"],"C:\\Users\\zahar\\webshop\\client\\src\\App.js",["122"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport AppRouter from \"./components/AppRouter\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"./index\";\r\nimport {check} from \"./http/userAPI\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nconst App = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        check().then(data => {\r\n            user.setUser(true)\r\n            user.setIsAuth(true)\r\n        }).finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <Spinner animation={\"grow\"}/>\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <NavBar />\r\n            <AppRouter />\r\n        </BrowserRouter>\r\n    );\r\n});\r\n\r\nexport default App;\r\n","C:\\Users\\zahar\\webshop\\client\\src\\store\\UserStore.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\http\\userAPI.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\components\\NavBar.js",["123"],"import React, {useContext} from 'react';\r\nimport {Context} from \"../index\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ADMIN_ROUTE, LOGIN_ROUTE, BASKET_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {useHistory} from 'react-router-dom'\r\nconst NavBar = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    console.log(user.setUser({}))\r\n\r\n    const logOut = () => {\r\n        user.setUser({})\r\n        user.setIsAuth(false)\r\n    }\r\n\r\n    function basketAdd() {\r\n\r\n        // сюда прописываешь роутер (по идее)\r\n        // а дальше надо придумать\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <NavLink style={{color:'white'}} to={SHOP_ROUTE}>ZackStore</NavLink>\r\n                {user.isAuth ?\r\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\r\n                        <Button \r\n                            variant={\"outline-light\"}\r\n                            onClick={() => history.push(BASKET_ROUTE)}\r\n                            className=\"mr-2\">\r\n                            Корзина\r\n                        </Button>\r\n                        <Button\r\n                            variant={\"outline-light\"}\r\n                            onClick={() => history.push(ADMIN_ROUTE)}\r\n                        >\r\n                            Админ панель\r\n                        </Button>\r\n                        <Button\r\n                            variant={\"outline-light\"}\r\n                            onClick={() => logOut()}\r\n                            className=\"ml-2\"\r\n                        >\r\n                            Выйти\r\n                        </Button>\r\n                    </Nav>\r\n                    :\r\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\r\n                        <Button variant={\"outline-light\"} onClick={() => history.push(LOGIN_ROUTE)}>Авторизация</Button>\r\n                    </Nav>\r\n                }\r\n            </Container>\r\n        </Navbar>\r\n\r\n    );\r\n});\r\n\r\nexport default NavBar;\r\n","C:\\Users\\zahar\\webshop\\client\\src\\http\\index.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\routes.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\utils\\consts.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\pages\\DevicePage.js",["124"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../assets/bigStar.png'\r\nimport {useParams} from 'react-router-dom'\r\nimport {fetchOneDevice} from \"../http/deviceAPI\";\r\nimport axios from 'axios';\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }, [])\r\n\r\n    const addBasket = async () => {\r\n        console.log(id)\r\n        axios.post('http://localhost:5000/api/basket/basketCreate', {\r\n            device_id: id,\r\n            user_id: 1\r\n          })\r\n          .then(function (response) {\r\n            console.log(response);\r\n          })\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{device.name}</h2>\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\r\n                        >\r\n                            {device.rating}\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\r\n                    >\r\n                        <h3> {device.price} руб.</h3>\r\n                        <Button \r\n                            variant={\"outline-dark\"}\r\n                            onClick={addBasket}>Добавить в корзину</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Характеристики</h1>\r\n                {device.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.description}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DevicePage;\r\n","C:\\Users\\zahar\\webshop\\client\\src\\pages\\Auth.js",["125"],"import React, {useContext, useState} from 'react';\r\nimport {Container, Form} from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n            } else {\r\n                data = await registration(email, password);\r\n            }\r\n            user.setUser(user)\r\n            user.setIsAuth(true)\r\n            history.push(SHOP_ROUTE)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите ваш email...\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите ваш пароль...\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\r\n                        {isLogin ?\r\n                            <div>\r\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                            variant={\"outline-success\"}\r\n                            onClick={click}\r\n                        >\r\n                            {isLogin ? 'Войти' : 'Регистрация'}\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;\r\n","C:\\Users\\zahar\\webshop\\client\\src\\pages\\Shop.js",["126","127"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 20).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand,])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar/>\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n","C:\\Users\\zahar\\webshop\\client\\src\\pages\\Admin.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\pages\\Basket.js",["128","129","130","131","132","133","134"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport {useParams} from 'react-router-dom'\r\nimport BasketList from \"../components/BasketList\";\r\nimport {fetchOneDevice} from \"../http/deviceAPI\";\r\n\r\nconst Basket = () => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    \r\n                </Col>\r\n                <Col md={9}>\r\n                    <BasketList/>\r\n                \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Basket;\r\n","C:\\Users\\zahar\\webshop\\client\\src\\http\\deviceAPI.js",["135"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const {data} = await $authHost.post('api/device', device)\r\n    return data\r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, limit = 5) => {\r\n    const {data} = await $host.get('api/device', {params: {\r\n            typeId, brandId, page, limit\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}\r\n","C:\\Users\\zahar\\webshop\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\components\\Pages.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\components\\TypeBar.js",["136"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    return (\r\n        <ListGroup>\r\n            {device.types.map(type =>\r\n                <ListGroup.Item\r\n                    style={{cursor: 'pointer'}}\r\n                    active={type.id === device.selectedType.id}\r\n                    onClick={() => device.setSelectedType(type)}\r\n                    key={type.id}\r\n                >\r\n                    {type.name}\r\n                </ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});\r\n\r\nexport default TypeBar;\r\n","C:\\Users\\zahar\\webshop\\client\\src\\components\\modals\\CreateBrand.js",["137"],"import React, {useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {createBrand, createType} from \"../../http/deviceAPI\";\r\n\r\nconst CreateBrand = ({show, onHide}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const addBrand = () => {\r\n        createBrand({name: value}).then(data => {\r\n            setValue('')\r\n            onHide()\r\n        })\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить тип\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={value}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        placeholder={\"Введите название типа\"}\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateBrand;\r\n","C:\\Users\\zahar\\webshop\\client\\src\\components\\modals\\CreateDevice.js",["138","139"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('brandId', device.selectedBrand.id)\r\n        formData.append('typeId', device.selectedType.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        createDevice(formData).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedBrand(brand)}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название устройства\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость устройства\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-dark\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введите название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Введите описание свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;\r\n","C:\\Users\\zahar\\webshop\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\components\\DeviceItem.js",[],"C:\\Users\\zahar\\webshop\\client\\src\\components\\BasketList.js",["140"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Row} from \"react-bootstrap\";\r\nimport BasketItem from './BasketItem';\r\nimport Basket from '../pages/Basket';\r\n\r\nconst BasketList = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    return (\r\n        <Row className=\"d-flex\">\r\n            {device.devices.map(device =>\r\n                <BasketItem key={device.id} device={device}/>\r\n            )}\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default BasketList;\r\n","C:\\Users\\zahar\\webshop\\client\\src\\components\\BasketItem.js",["141","142"],"import React from 'react';\r\nimport {Card, Col} from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {BASKET_ROUTE} from \"../utils/consts\";\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\n\r\nconst BasketItem = ({device}) => {\r\n    const history = useHistory()\r\n   \r\n    return (\r\n        <Col md={3} className={\"mt-3\"}onClick={() => history.push(BASKET_ROUTE + '/' + device.id)}>\r\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\r\n                <Image width={150} height={150} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\r\n                </div>\r\n                <div>{device.name}</div>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default BasketItem;\r\n",["143","144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":19,"column":8,"nodeType":"151","endLine":19,"endColumn":10,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":22,"column":14,"nodeType":"155","messageId":"156","endLine":22,"endColumn":23},{"ruleId":"149","severity":1,"message":"157","line":13,"column":8,"nodeType":"151","endLine":13,"endColumn":10,"suggestions":"158"},{"ruleId":"153","severity":1,"message":"159","line":26,"column":17,"nodeType":"155","messageId":"156","endLine":26,"endColumn":21},{"ruleId":"149","severity":1,"message":"160","line":23,"column":8,"nodeType":"151","endLine":23,"endColumn":10,"suggestions":"161"},{"ruleId":"149","severity":1,"message":"160","line":30,"column":8,"nodeType":"151","endLine":30,"endColumn":65,"suggestions":"162"},{"ruleId":"153","severity":1,"message":"163","line":1,"column":16,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"153","severity":1,"message":"164","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":35},{"ruleId":"153","severity":1,"message":"165","line":2,"column":9,"nodeType":"155","messageId":"156","endLine":2,"endColumn":15},{"ruleId":"153","severity":1,"message":"166","line":2,"column":17,"nodeType":"155","messageId":"156","endLine":2,"endColumn":21},{"ruleId":"153","severity":1,"message":"167","line":2,"column":39,"nodeType":"155","messageId":"156","endLine":2,"endColumn":44},{"ruleId":"153","severity":1,"message":"168","line":3,"column":9,"nodeType":"155","messageId":"156","endLine":3,"endColumn":18},{"ruleId":"153","severity":1,"message":"169","line":5,"column":9,"nodeType":"155","messageId":"156","endLine":5,"endColumn":23},{"ruleId":"153","severity":1,"message":"170","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":18},{"ruleId":"153","severity":1,"message":"171","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":11},{"ruleId":"153","severity":1,"message":"172","line":4,"column":22,"nodeType":"155","messageId":"156","endLine":4,"endColumn":32},{"ruleId":"153","severity":1,"message":"173","line":5,"column":36,"nodeType":"155","messageId":"156","endLine":5,"endColumn":48},{"ruleId":"149","severity":1,"message":"160","line":18,"column":8,"nodeType":"151","endLine":18,"endColumn":10,"suggestions":"174"},{"ruleId":"153","severity":1,"message":"175","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":14},{"ruleId":"153","severity":1,"message":"176","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":13},{"ruleId":"153","severity":1,"message":"168","line":7,"column":9,"nodeType":"155","messageId":"156","endLine":7,"endColumn":18},{"ruleId":"145","replacedBy":"177"},{"ruleId":"147","replacedBy":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["181"],"no-unused-vars","'basketAdd' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["182"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["183"],["184"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'useParams' is defined but never used.","'fetchOneDevice' is defined but never used.","'jwt_decode' is defined but never used.","'Col' is defined but never used.","'createType' is defined but never used.","'fetchDevices' is defined but never used.",["185"],"'Basket' is defined but never used.","'axios' is defined but never used.",["179"],["180"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"190","fix":"194"},"Update the dependencies array to be: [user]",{"range":"195","text":"196"},"Update the dependencies array to be: [id]",{"range":"197","text":"198"},"Update the dependencies array to be: [device]",{"range":"199","text":"200"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"201","text":"202"},{"range":"203","text":"200"},[659,661],"[user]",[496,498],"[id]",[897,899],"[device]",[1137,1194],"[device.page, device.selectedType, device.selectedBrand, device]",[764,766]]